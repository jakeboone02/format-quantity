import { FormatQuantityTests } from './types';

const romanNumerals = true;
const fractionSlash = true;
const vulgarFractions = true;

export const formatQuantityTests: FormatQuantityTests = {
  'returns null for NaN and non-numeric strings': [
    [NaN, null],
    ['NaN', null],
  ],
  'returns blank string for zero': [
    [0, ''],
    [1 - 1, ''],
  ],
  integers: [
    [1, '1'],
    [1 + 1, '2'],
    [1, '1', true],
    [100, '100'],
  ],
  'negative values': [
    [-1, '-1'],
    [1 - 3, '-2'],
    [-1, '-1', true],
    [-1.5, '-1 1/2'],
    [-1.5, '-1½', true],
    [-0.5, '-1/2'],
    [-0.5, '-½', true],
    [-0.5, '-1⁄2', { fractionSlash }],
  ],
  'returns most decimal values as-is': [
    [1.45, '1.45'],
    [-1.45, '-1.45'],
  ],
  halves: [
    [1.49, '1.49'],
    [1.5, '1 1/2'],
    [1 + 1 / 2, '1 1/2'],
    [1.50001, '1 1/2'],
    [1.49999, '1 1/2'],
    [1.5, '1½', true],
    [1.52, '1.52'],
  ],
  thirds: [
    [1.32, '1.32'],
    [1.33, '1 1/3'],
    [1 + 1 / 3, '1 1/3'],
    [1.33, '1⅓', true],
    [1.3333333333333333, '1 1/3'],
    [1.34, '1.34'],
    [1.66, '1 2/3'],
    [1 + 2 / 3, '1 2/3'],
    [1.66, '1⅔', true],
    [1.667, '1 2/3'],
    [1.6666666666666666, '1 2/3'],
    [1.67, '1.67'],
  ],
  quarters: [
    [1.24, '1.24'],
    [1.25, '1 1/4'],
    [1 + 1 / 4, '1 1/4'],
    [1.25, '1¼', true],
    [-1.25, '-1 1/4'],
    [1.26, '1.26'],
    [1.74, '1.74'],
    [1.75, '1 3/4'],
    [1 + 3 / 4, '1 3/4'],
    [1.75, '1¾', true],
    [-1.75, '-1 3/4'],
    [1.76, '1.76'],
  ],
  fifths: [
    [0.2, '1/5'],
    [0.2, '⅕', true],
    [1.2, '1 1/5'],
    [1 + 1 / 5, '1 1/5'],
    [1.2, '1⅕', true],
    [0.4, '2/5'],
    [1.4, '1 2/5'],
    [1 + 2 / 5, '1 2/5'],
    [1.4, '1⅖', true],
    [0.6, '3/5'],
    [1.6, '1 3/5'],
    [1 + 3 / 5, '1 3/5'],
    [1.6, '1⅗', true],
    [0.8, '4/5'],
    [1.8, '1 4/5'],
    [1 + 4 / 5, '1 4/5'],
    [1.8, '1⅘', true],
  ],
  sixths: [
    [1 + 1 / 6, '1 1/6'],
    [1.166, '1⅙', true],
    [1 + 5 / 6, '1 5/6'],
    [1.833, '1⅚', true],
  ],
  sevenths: [
    [1 + 1 / 7, '1 1/7'],
    [1.1428, '1⅐', true],
  ],
  eighths: [
    [1.125, '1 1/8'],
    [1 + 1 / 8, '1 1/8'],
    [1.125, '1⅛', true],
    [1.375, '1 3/8'],
    [1 + 3 / 8, '1 3/8'],
    [1.375, '1⅜', true],
    [1.625, '1 5/8'],
    [1 + 5 / 8, '1 5/8'],
    [1.625, '1⅝', true],
    [1.875, '1 7/8'],
    [1 + 7 / 8, '1 7/8'],
    [1.875, '1⅞', true],
  ],
  ninths: [
    [1 + 1 / 9, '1 1/9'],
    [1.11111, '1⅑', true],
  ],
  tenths: [
    [1 + 1 / 10, '1 1/10'],
    [1.1, '1⅒', true],
  ],
  sixteenths: [
    [1 + 1 / 16, '1 1/16'],
    [1.0625, '1 1/16'],
    [1.0625, '1 1/16', { vulgarFractions /* , tolerance: 0.001 */ }],
    [1.0625, '1 1⁄16', { fractionSlash /* , tolerance: 0.001 */ }],
    [1 + 3 / 16, '1 3/16'],
    [1.1875, '1 3/16'],
    [1.1875, '1 3/16', { vulgarFractions /* , tolerance: 0.001 */ }],
    [1.1875, '1 3⁄16', { fractionSlash /* , tolerance: 0.001 */ }],
    [1 + 5 / 16, '1 5/16'],
    [1.3125, '1 5/16'],
    [1.3125, '1 5/16', { vulgarFractions /* , tolerance: 0.001 */ }],
    [1.3125, '1 5⁄16', { fractionSlash /* , tolerance: 0.001 */ }],
    [1 + 7 / 16, '1 7/16'],
    [1.4375, '1 7/16'],
    [1.4375, '1 7/16', { vulgarFractions /* , tolerance: 0.001 */ }],
    [1.4375, '1 7⁄16', { fractionSlash /* , tolerance: 0.001 */ }],
    [1 + 9 / 16, '1 9/16'],
    [1.5625, '1 9/16'],
    [1.5625, '1 9/16', { vulgarFractions /* , tolerance: 0.001 */ }],
    [1.5625, '1 9⁄16', { fractionSlash /* , tolerance: 0.001 */ }],
    [1 + 11 / 16, '1 11/16'],
    [1.6875, '1 11/16'],
    [1.6875, '1 11/16', { vulgarFractions /* , tolerance: 0.001 */ }],
    [1.6875, '1 11⁄16', { fractionSlash /* , tolerance: 0.001 */ }],
    [1 + 13 / 16, '1 13/16'],
    [1.8125, '1 13/16'],
    [1.8125, '1 13/16', { vulgarFractions /* , tolerance: 0.001 */ }],
    [1.8125, '1 13⁄16', { fractionSlash /* , tolerance: 0.001 */ }],
    [1 + 15 / 16, '1 15/16'],
    [1.9375, '1 15/16'],
    [1.9375, '1 15/16', { vulgarFractions /* , tolerance: 0.001 */ }],
    [1.9375, '1 15⁄16', { fractionSlash /* , tolerance: 0.001 */ }],
  ],
  'options as null and empty object': [
    [1.5, '1 1/2', null as any],
    [1.5, '1 1/2', {}],
  ],
  'vulgarFractions option': [
    [1.5, '1 1/2', { vulgarFractions: false }],
    [1.5, '1½', { vulgarFractions }],
  ],
  'fractionSlash option': [
    [1.5, '1 1/2', { fractionSlash: false }],
    [1.5, '1 1⁄2', { fractionSlash }],
    [1.5, '1½', { fractionSlash, vulgarFractions }],
  ],
  'tolerance option': [
    [1.3, '1.3', { tolerance: null as any }],
    [1.3, '1 1/3', { tolerance: 0.1 }],
    [1.1428, '1.1428', { tolerance: 0.000001 }],
  ],
  'Roman numerals': [
    ['NaN', null, { romanNumerals }],
    [0.9, '', { romanNumerals }],
    [4000, '', { romanNumerals }],
    [3999.99999, 'MMMCMXCIX', { romanNumerals }],
    [1.3, 'I', { romanNumerals }],
    [1.9, 'I', { romanNumerals }],
    [1, 'I', { romanNumerals }],
    [2, 'II', { romanNumerals }],
    [3, 'III', { romanNumerals }],
    [4, 'IV', { romanNumerals }],
    [5, 'V', { romanNumerals }],
    [6, 'VI', { romanNumerals }],
    [7, 'VII', { romanNumerals }],
    [8, 'VIII', { romanNumerals }],
    [9, 'IX', { romanNumerals }],
    [10, 'X', { romanNumerals }],
    [11, 'XI', { romanNumerals }],
    [12, 'XII', { romanNumerals }],
    [1214, 'MCCXIV', { romanNumerals }],
    // Make sure it favors the romanNumerals option
    [12, 'XII', { romanNumerals, fractionSlash }],
    [12, 'XII', { romanNumerals, vulgarFractions }],
    [12, 'XII', { romanNumerals, fractionSlash, vulgarFractions }],
  ],
};
